services:
  app:
    image: eclipse-temurin:21-jre
    container_name: bitly_app
    depends_on:
      - postgres
      - redis
    working_dir: /app
    volumes:
      - ./build/libs/bitly-good-0.0.1-SNAPSHOT.jar:/app/app.jar
    command: java -jar /app/app.jar
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bitly
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - MANAGEMENT_SERVER_PORT=8081
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - monitoring
  postgres:
    image: postgres:13
    container_name: bitly_db
    environment:
      POSTGRES_DB: bitly
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring

  redis:
    image: redis:7-alpine
    container_name: bitly_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - monitoring

  # 모니터링 스택
  prometheus:
    image: prom/prometheus:latest
    container_name: bitly_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: bitly_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=grafana-exploretraces-app,grafana-metricsdrilldown-app,grafana-lokiexplore-app,grafana-pyroscope-app
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: bitly_redis_exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: bitly_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # k6 테스트 결과 저장용 InfluxDB
  influxdb:
    image: influxdb:1.8
    container_name: bitly_influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin123
      - INFLUXDB_USER=k6
      - INFLUXDB_USER_PASSWORD=k6password
      # HTTP 요청 크기 제한 증가 (바이트 단위로 설정)
      - INFLUXDB_HTTP_MAX_BODY_SIZE=104857600
      # 배치 크기 최적화
      - INFLUXDB_DATA_MAX_SERIES_PER_DATABASE=1000000
      - INFLUXDB_DATA_MAX_VALUES_PER_TAG=100000
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  influxdb_data:

networks:
  monitoring:
    driver: bridge
